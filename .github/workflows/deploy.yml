name: Build and deploy

on: [push]

env:
  IMAGE: ghcr.io/${{ github.repository }}/dp-inntekt-klassifiserer:${{ github.sha }}

jobs:
  build:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/gradle-build-action@v1
        with:
          arguments: --configuration-cache build installDist

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.IMAGE }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Archive NAIS yaml
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v1
        with:
          name: nais-yaml
          path: nais

  deploy-dev:
    name: Deploy to dev
    needs: [build]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/dev/nais.yaml
          VARS: nais/vars.yaml
          PRINT_PAYLOAD: true

#  acceptance-tests:
#    name: Run acceptance tests
#    needs: [deploy-dev]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#        with:
#          repository: navikt/dagpenger-funksjonelle-tester
#      - id: repo-name
#        name: Split owner from repository name
#        run: |
#          echo ::set-output name=name::$(echo ${{github.repository}} | sed -e "s/^navikt\///" )
#      - uses: nais/deploy/actions/deploy@v1
#        name: Run tests
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-fss
#          VAR: GITHUB_REPO=${{ steps.repo-name.outputs.name }}
#          RESOURCE: nais/tests.yml
#        timeout-minutes: 5

  deploy-prod:
    name: Deploy to Production
    needs: [deploy-dev]
    #needs: [deploy-dev]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/prod/nais.yaml
          VARS: nais/vars.yaml
          PRINT_PAYLOAD: true
